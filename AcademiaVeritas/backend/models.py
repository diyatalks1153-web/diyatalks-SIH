"""
Data models module for AcademiaVeritas project.

This module defines the core data structures used throughout the application,
representing the database entities with proper type hints and data validation.
"""

from dataclasses import dataclass
from datetime import date
from typing import Optional


@dataclass
class Institution:
    """
    Data model representing an educational institution in the AcademiaVeritas system.
    
    This class represents institutions that can issue and manage academic certificates.
    Each institution has authentication credentials and can be associated with multiple
    certificates issued to students.
    
    Attributes:
        id (int): Unique identifier for the institution (auto-generated by database)
        name (str): Official name of the educational institution
        email (str): Contact email address for the institution (must be unique)
        password_hash (str): Securely hashed password for institution authentication
        
    Example:
        >>> institution = Institution(
        ...     id=1,
        ...     name="University of Technology",
        ...     email="admin@university.edu",
        ...     password_hash="pbkdf2:sha256:600000$..."
        ... )
        >>> print(institution.name)  # Output: University of Technology
    """
    id: int
    name: str
    email: str
    password_hash: str


@dataclass
class Verifier:
    """
    Data model representing a verifier in the AcademiaVeritas system.
    
    This class represents verifiers who can log in to verify certificates.
    Each verifier has authentication credentials.
    
    Attributes:
        id (int): Unique identifier for the verifier (auto-generated by database)
        name (str): Name of the verifier (person or organization)
        email (str): Contact email address for the verifier (must be unique)
        password_hash (str): Securely hashed password for verifier authentication
    """
    id: int
    name: str
    email: str
    password_hash: str


@dataclass
class Certificate:
    """
    Data model representing an academic certificate in the AcademiaVeritas system.
    
    This class represents individual academic certificates issued by educational
    institutions to students. Each certificate contains student information, course
    details, and cryptographic hashes for integrity verification and blockchain
    integration.
    
    Attributes:
        id (int): Unique identifier for the certificate (auto-generated by database)
        institution_id (int): Foreign key reference to the issuing institution
        student_name (str): Full name of the student who received the certificate
        roll_number (str): Student's unique roll number or identification number
        course_name (str): Name of the course, degree, or program completed
        grade (str): Grade or classification achieved by the student
        issue_date (date): Date when the certificate was officially issued
        certificate_hash (str): Cryptographic hash of the certificate data for integrity verification
        blockchain_tx_hash (Optional[str]): Transaction hash from blockchain storage (None until stored)
        
    Example:
        >>> certificate = Certificate(
        ...     id=1,
        ...     institution_id=1,
        ...     student_name="Jane Doe",
        ...     roll_number="2021001",
        ...     course_name="Bachelor of Technology",
        ...     grade="A+",
        ...     issue_date=date(2025, 10, 15),
        ...     certificate_hash="a1b2c3d4e5f6...",
        ...     blockchain_tx_hash="0x1234567890abcdef..."
        ... )
        >>> print(certificate.student_name)  # Output: Jane Doe
        
    Note:
        The blockchain_tx_hash field is optional and will be None until the certificate
        is successfully stored on the blockchain. The certificate_hash is generated
        deterministically from the certificate data and serves as a unique identifier.
    """
    id: int
    institution_id: int
    student_name: str
    roll_number: str
    course_name: str
    grade: str
    issue_date: date
    certificate_hash: str
    blockchain_tx_hash: Optional[str]
