version: '3.8'

services:
  # MySQL Database for Development
  db:
    image: mysql:8.0
    container_name: academia_db_dev
    restart: unless-stopped
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./backend/database_schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=academia_veritas_dev
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    ports:
      - "3307:3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - academia_dev_network

  # Python Flask Backend for Development
  backend:
    container_name: academia_backend_dev
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - backend_dev_uploads:/app/uploads
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=academia_veritas_dev
      - DB_USER=admin
      - DB_PASSWORD=admin
      - SECRET_KEY=dev-secret-key
      - INFURA_API_KEY=${INFURA_API_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - WALLET_PRIVATE_KEY=${WALLET_PRIVATE_KEY}
      - WALLET_ADDRESS=${WALLET_ADDRESS}
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "app.py"]
    networks:
      - academia_dev_network

  # Redis for Development
  redis:
    image: redis:7-alpine
    container_name: academia_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - academia_dev_network

volumes:
  mysql_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local
  redis_dev_data:
    driver: local

networks:
  academia_dev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
